manuscript:
  props:
    - PLAY_REMOTEREPO:   origin
    - PLAY_TARGETBRANCH: master
  scene:
    dryrun:  0
    verbose: 1
    debug:   0
  parts:
    integrate:
      props:
        - PLAY_VERSION:      ${CIRCLE_SHA1:=`git rev-parse HEAD`}
        - PLAY_VER:          '`printenv PLAY_VERSION | cut -c 1-7`'
        - PLAY_REMOTEBRANCH: '`echo $PLAY_REMOTEREPO/$PLAY_TARGETBRANCH`'
        - PLAY_TARGETVER:    '`git rev-parse --short $PLAY_REMOTEBRANCH`'
      scene:
        verbose: 1
        dryrun:  0
        debug:   0
      lines:
        - run:
            caption: Rebase to remote target branch
            command: git rebase $PLAY_REMOTEBRANCH
            die_on_err: yes
        - run:
            caption: Checkout target branch
            command: git checkout $PLAY_TARGETBRANCH
            die_on_err: yes
        - run:
            caption: Pull latest from remote target branch
            command: git pull $PLAY_REMOTEREPO $PLAY_TARGETBRANCH
            die_on_err: yes
        - run:
            caption: Merge the triggering commit into target branch
            command: git merge --ff-only $PLAY_VER
            die_on_err: yes
        - run:
            caption: Expose commit to cache
            command: git rev-parse --short HEAD
    deploy:
      props:
      scene:
    deliver:
      props:
        - PLAY_GITREPO: '`git remote get-url  $PLAY_REMOTEREPO | sed  s/".*github.com[\/:]//" | sed s/.git//`'
      scene:
        dryrun:  no
        verbose: yes
      lines:
        - run:
            caption: Set GitHub token remote
            command: git remote add ghtoken https://$PHLOW_GHTOKEN@github.com/$PLAY_GITREPO.git
            die_on_err: yes
        - run:
            caption: DEBUG
            command: |
              git remote --v
        - run:
            caption: Push current branch to GitHub
            command: git push ghtoken
            die_on_err: yes
        - run:
            caption: Delete the remote triggering branch
            command: git push ghtoken :$CIRCLE_BRANCH
            die_on_err: yes

    git_prep:
      props:
      scene:
        dryrun: no
        verbose: yes
      lines:
        - run:
            caption: Set the git user.name
            command: git config user.name "$PLAY_USER_NAME"
            die_on_err: yes
        - run:
            caption: Set the git.user.email
            command: git config user.email "$PLAY_USER_EMAIL"
            die_on_err: yes
        - run:
            caption: Who am I?
            command: |
              git config user.name
              git config user.email
